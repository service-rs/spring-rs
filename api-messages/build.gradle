plugins {
    id 'java'
    id 'com.google.protobuf'
}

sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"

    implementation "com.github.marcoferrer.krotoplus:kroto-plus-coroutines:$kroto_version"
    implementation "com.google.protobuf:protobuf-java:$proto_version"

    implementation "io.grpc:grpc-protobuf:$grpc_version"
    implementation "io.grpc:grpc-stub:$grpc_version"
    //implementation "io.grpc:grpc-kotlin-stub:$grpc_kt_version"
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:$protoc_version"
    }

    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:$grpc_version"
        }

        /*grpckt {
            artifact = "io.grpc:protoc-gen-grpc-kotlin:$grpc_kt_version"
        }*/

        kroto {
            artifact = "com.github.marcoferrer.krotoplus:protoc-gen-kroto-plus:$kroto_version"
        }
    }

    generateProtoTasks {
        def config = file("kroto.json")

        all().each{ task ->
            task.inputs.files config

            task.plugins {
                grpc { }
                kroto {
                    outputSubDir = "java"
                    option "ConfigPath=${config.name}"
                }
            }
        }
    }
}
